<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>AjAx</title>
    <link href="/2020/08/20/AjAx/"/>
    <url>/2020/08/20/AjAx/</url>
    
    <content type="html"><![CDATA[<p>js原生ajax，JQ的ajax</p><a id="more"></a><h2 id="ajax技术"><a href="#ajax技术" class="headerlink" title="ajax技术"></a>ajax技术</h2><p>在网页不跳转的情况下向服务器请求数据</p><p><code>测试接口请戳我</code>👉 <a href='https://github.com/AutumnFish/testApi'>大佬提供的测试接口</a></p><h3 id="get请求"><a href="#get请求" class="headerlink" title="get请求"></a>get请求</h3><pre><code class="hljs javascript">&lt;script&gt;    <span class="hljs-comment">//(1)创建xhr对象</span>    <span class="hljs-keyword">let</span> xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();    <span class="hljs-comment">//(2)设置请求方法和地址</span>    xhr.open(<span class="hljs-string">&#x27;get&#x27;</span>,<span class="hljs-string">&#x27;接口?&#x27;</span>+<span class="hljs-string">&#x27;参数key=参数value&#x27;</span>);    <span class="hljs-comment">//xhr.open(&#x27;get&#x27;,&#x27;https://autumnfish.cn/api/hero/simple?name=赵信&#x27;);</span>    <span class="hljs-comment">//(3)发送请求</span>    xhr.send();    <span class="hljs-comment">//(4)注册响应事件</span>    xhr.onload =<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-built_in">console</span>.log(xhr.responseText);      &#125;;&lt;/script&gt;</code></pre><h3 id="post请求"><a href="#post请求" class="headerlink" title="post请求"></a>post请求</h3><pre><code class="hljs javascript">&lt;script&gt;    <span class="hljs-comment">//(1)创建xhr</span>    <span class="hljs-keyword">let</span> xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();    <span class="hljs-comment">//(2)设置请求方法和地址</span>    xhr.open(<span class="hljs-string">&#x27;post&#x27;</span>, <span class="hljs-string">&#x27;https://autumnfish.cn/api/user/register&#x27;</span>);    <span class="hljs-comment">//(3)设置请求头（只有post才需要，为固定格式）</span>    xhr.setRequestHeader(<span class="hljs-string">&#x27;Content-Type&#x27;</span>,<span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>);    <span class="hljs-comment">//(4)发送ajax请求,</span>    xhr.send(<span class="hljs-string">&#x27;参数key=&#x27;</span>+参数value);    <span class="hljs-comment">//xhr.send(&#x27;username=&#x27; + username);</span>    <span class="hljs-comment">//(5)注册响应事件</span>    xhr.onload = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;        $(<span class="hljs-string">&#x27;.info&#x27;</span>).text(xhr.responseText);    &#125;&#125;);&lt;/script&gt;</code></pre><h3 id="get与post的区别"><a href="#get与post的区别" class="headerlink" title="get与post的区别"></a>get与post的区别</h3><ul><li><p>post需要单独设置请求头</p></li><li><p>get在url后面发：      url?key=value </p></li><li><p>post在send()方法里面发：  xhr.send(‘key=value’)</p></li></ul><h2 id="JSON格式数据"><a href="#JSON格式数据" class="headerlink" title="JSON格式数据"></a>JSON格式数据</h2><ol><li><p>JSON是一种数据格式，本质是字符串。</p></li><li><p>JSON作用：解决跨平台问题。</p></li></ol><p><code>服务器一般返回json对象，不能直接使用需要转成js对象</code></p><ul><li>JSON 转 JS ； JSON.parse(js对象)</li><li>JS转JSON ： JSON.stringify(js对象)</li></ul><pre><code class="hljs javascript"><span class="hljs-comment">//1. json数组必须使用[]包起来</span><span class="hljs-comment">//json里面的内容必须要使用双引号包起来</span><span class="hljs-keyword">let</span> jsonArr = <span class="hljs-string">&#x27;[&quot;10&quot;,&quot;20&quot;,&quot;30&quot;]&#x27;</span>;<span class="hljs-built_in">console</span>.log(jsonArr);<span class="hljs-keyword">let</span> jsArr = <span class="hljs-built_in">JSON</span>.parse(jsonArr);<span class="hljs-built_in">console</span>.log(jsArr);<span class="hljs-comment">//2. json对象必须要使用&#123;&#125;包起来</span><span class="hljs-keyword">let</span> jsonObj = <span class="hljs-string">&#x27;&#123;&quot;name&quot;:&quot;张三&quot;,&quot;age&quot;:&quot;18&quot;&#125;&#x27;</span>;<span class="hljs-keyword">let</span> jsObj = <span class="hljs-built_in">JSON</span>.parse(jsonObj);<span class="hljs-built_in">console</span>.log(jsObj);</code></pre><h2 id="ajax传递多参数"><a href="#ajax传递多参数" class="headerlink" title="ajax传递多参数"></a>ajax传递多参数</h2><p>用 &amp; 连接参数</p><pre><code class="hljs javascript"><span class="hljs-comment">//get</span>xhr.open(<span class="hljs-string">&#x27;get&#x27;</span>, <span class="hljs-string">&#x27;http://www.tuling123.com/openapi/api?key1=2162602fd87240a8b7bba7431ffd379b&amp;key12=额&#x27;</span>);<span class="hljs-comment">//post</span>xhr.send(<span class="hljs-string">&#x27;key=2162602fd87240a8b7bba7431ffd379b&amp;info=不需要吗？&#x27;</span>);</code></pre><h2 id="jQ使用ajax"><a href="#jQ使用ajax" class="headerlink" title="jQ使用ajax"></a>jQ使用ajax</h2><p>$.ajax()</p><pre><code class="hljs javascript">$.ajax(&#123;    <span class="hljs-comment">//接口地址</span>    url: <span class="hljs-string">&#x27;http://www.tuling123.com/openapi/api&#x27;</span>,    <span class="hljs-comment">//请求类型，可选get</span>    type: <span class="hljs-string">&#x27;post&#x27;</span>,    <span class="hljs-comment">//检测json格式,如果不是json则不执行回调函数了</span>    dataType:<span class="hljs-string">&#x27;json&#x27;</span>,    <span class="hljs-comment">//参数</span>    data: &#123;        key: <span class="hljs-string">&#x27;2162602fd87240a8b7bba7431ffd379b&#x27;</span>,        info: <span class="hljs-string">&#x27;请告诉我，我的女朋友在哪里？&#x27;</span>    &#125;,    <span class="hljs-comment">//回调函数</span>    success: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">backdata</span>) </span>&#123;        <span class="hljs-comment">//backdata,存放返回的内容，会自动转换成js对象</span>    &#125;&#125;);</code></pre>]]></content>
    
    
    <categories>
      
      <category>ajax</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ajax</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>echarts尝试</title>
    <link href="/2020/08/19/echart%E5%B0%9D%E8%AF%95/"/>
    <url>/2020/08/19/echart%E5%B0%9D%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>echarts图表语法</p><p>记录一些echarts图表语法</p><a id="more"></a><h2 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h2><p> 详细了解请戳我 👉  <a href='https://echarts.apache.org/zh/index.html'>echarts官网</a></p><ol><li><code>获取 ECharts</code></li></ol><ul><li>在 ECharts 的 <a href="https://github.com/apache/incubator-echarts/releases">GitHub</a> 获取。</li><li>通过 npm 获取 echarts，<code>npm install echarts --save</code>，详见“[在 webpack 中使用 echarts](<a href="https://echarts.apache.org/zh/tutorial.html#%E5%9C%A8">https://echarts.apache.org/zh/tutorial.html#在</a> webpack 中使用 ECharts)”</li><li>通过 <a href="https://www.jsdelivr.com/package/npm/echarts">jsDelivr</a> 等 CDN 引入</li></ul><ol start="2"><li><code>引入 ECharts</code></li></ol><pre><code class="hljs javascript">&lt;script src=<span class="hljs-string">&quot;echarts.min.js&quot;</span>&gt;&lt;/script&gt;</code></pre><ol start="3"><li><code>绘制一个简单的图表</code></li></ol><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;main&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 600px;height:400px;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">    <span class="hljs-keyword">var</span> myChart = echarts.init(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;main&#x27;</span>));</span><span class="javascript">    <span class="hljs-keyword">var</span> option = &#123;</span>        xAxis: &#123;<span class="javascript">            data: [<span class="hljs-string">&quot;衬衫&quot;</span>, <span class="hljs-string">&quot;羊毛衫&quot;</span>, <span class="hljs-string">&quot;雪纺衫&quot;</span>, <span class="hljs-string">&quot;裤子&quot;</span>, <span class="hljs-string">&quot;高跟鞋&quot;</span>, <span class="hljs-string">&quot;袜子&quot;</span>]</span>        &#125;,        yAxis: &#123;&#125;,        series: [&#123;<span class="javascript">            type: <span class="hljs-string">&#x27;bar&#x27;</span>,</span>            data: [5, 20, 36, 10, 10, 20]        &#125;]    &#125;;    myChart.setOption(option);<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h2 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h2><h3 id="饼图模板"><a href="#饼图模板" class="headerlink" title="饼图模板"></a>饼图模板</h3><pre><code class="hljs javascript">&lt;body&gt;    &lt;div id=<span class="hljs-string">&quot;main&quot;</span> style=<span class="hljs-string">&quot;width: 600px;height:400px;&quot;</span>&gt;&lt;/div&gt;    &lt;script&gt;        <span class="hljs-keyword">var</span> myChart = echarts.init(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;main&#x27;</span>));        <span class="hljs-keyword">var</span> option = &#123; <span class="hljs-comment">//指定图表的配置项和数据</span>            backgroundColor: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">// 背景颜色</span>            tooltip: &#123; <span class="hljs-comment">//鼠标移入提示</span>                trigger: <span class="hljs-string">&#x27;item&#x27;</span>, <span class="hljs-comment">//圆形图专用</span>                formatter: <span class="hljs-string">&#x27;&#123;a&#125; &lt;br/&gt;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&#x27;</span> <span class="hljs-comment">//显示百分比</span>            &#125;,            color: [], <span class="hljs-comment">//区块颜色</span>            visualMap: &#123; <span class="hljs-comment">// 左下角略缩图</span>                show: <span class="hljs-literal">true</span>, <span class="hljs-comment">//显示与否</span>                inRange: &#123;&#125; <span class="hljs-comment">//在选中范围中的视觉元素</span>            &#125;,            series: [&#123; <span class="hljs-comment">//图表数据</span>                name: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">//鼠标移入区块显示的字</span>                type: <span class="hljs-string">&#x27;pie&#x27;</span>, <span class="hljs-comment">//属性：圆</span>                radius: <span class="hljs-string">&#x27;80%&#x27;</span>, <span class="hljs-comment">//调整圆大小</span>                center: [<span class="hljs-string">&#x27;50%&#x27;</span>, <span class="hljs-string">&#x27;50%&#x27;</span>], <span class="hljs-comment">//圆心位置</span>                startAngle: <span class="hljs-number">90</span>, <span class="hljs-comment">//起始角度</span>                clockwise = <span class="hljs-literal">true</span>, <span class="hljs-comment">//是否顺时针排布</span>                roseType: <span class="hljs-string">&#x27;radius&#x27;</span>, <span class="hljs-comment">//&#x27;radius&#x27;扇区，&#x27;area&#x27;纯圆</span>                animationType: <span class="hljs-string">&#x27;scale&#x27;</span>, <span class="hljs-comment">//初始动画效果，可选</span>                animationEasing: <span class="hljs-string">&#x27;quinticIn&#x27;</span>, <span class="hljs-comment">//初始动画的缓动效果。可选</span>                data: [&#123;&#125;], <span class="hljs-comment">//数据</span>                <span class="hljs-comment">/*</span><span class="hljs-comment">                数据可以点函数</span><span class="hljs-comment">                data: [&#123;&#125;].sort(//逆时针从大到小</span><span class="hljs-comment">                    function(a, b) &#123;</span><span class="hljs-comment">                    return a.value - b.value;&#125;</span><span class="hljs-comment">                    ),</span><span class="hljs-comment">                */</span>                animationDelay: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;                    <span class="hljs-comment">/*</span><span class="hljs-comment">                    初始动画的延迟，支持回调函数，</span><span class="hljs-comment">                    可以通过返回每个不同的数据</span><span class="hljs-comment">                    来实现戏剧性的动画效果啊 </span><span class="hljs-comment">                    */</span>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">500</span>;                &#125;,            &#125;]        &#125;;        myChart.setOption(option); <span class="hljs-comment">//使用刚指定的配置项和数据显示图表。</span>    &lt;/script&gt;&lt;/body&gt;</code></pre><h3 id="饼图实例"><a href="#饼图实例" class="headerlink" title="饼图实例"></a>饼图实例</h3><pre><code class="hljs javascript">&lt;body&gt;&lt;div id=<span class="hljs-string">&quot;main&quot;</span> style=<span class="hljs-string">&quot;width: 600px;height:400px;&quot;</span>&gt;&lt;/div&gt;&lt;script&gt;    <span class="hljs-keyword">var</span> myChart = echarts.init(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;main&#x27;</span>));    <span class="hljs-comment">//指定图表的配置项和数据</span>    <span class="hljs-keyword">var</span> option = &#123;        <span class="hljs-comment">// 背景颜色</span>        backgroundColor: <span class="hljs-string">&#x27;#fff&#x27;</span>,        <span class="hljs-comment">//鼠标移入提示</span>        tooltip: &#123;            trigger: <span class="hljs-string">&#x27;item&#x27;</span>, <span class="hljs-comment">//圆形图专用</span>            formatter: <span class="hljs-string">&#x27;&#123;a&#125; &lt;br/&gt;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&#x27;</span> <span class="hljs-comment">//显示百分比</span>        &#125;,        <span class="hljs-comment">//区块颜色</span>        color: [<span class="hljs-string">&#x27;#fff&#x27;</span>, <span class="hljs-string">&#x27;#006c00&#x27;</span>, <span class="hljs-string">&#x27;#ed8884&#x27;</span>, <span class="hljs-string">&#x27;#ff9f7f&#x27;</span>, <span class="hljs-string">&#x27;#0096ff&#x27;</span>, <span class="hljs-string">&#x27;#9fe6b8&#x27;</span>, <span class="hljs-string">&#x27;#ff61ff&#x27;</span>, <span class="hljs-string">&#x27;red&#x27;</span>],        <span class="hljs-comment">// 左下角略缩图</span>        visualMap: &#123;            show: <span class="hljs-literal">true</span>,            inRange: &#123;                <span class="hljs-comment">// colorLightness: [0, 1],</span>                colorSaturation: [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>]            &#125;        &#125;,        <span class="hljs-comment">//图表数据</span>        series: [&#123;            name: <span class="hljs-string">&#x27;访问来源&#x27;</span>,            type: <span class="hljs-string">&#x27;pie&#x27;</span>,            <span class="hljs-comment">//调整圆大小</span>            radius: <span class="hljs-string">&#x27;80%&#x27;</span>,            <span class="hljs-comment">//圆心位置</span>            center: [<span class="hljs-string">&#x27;50%&#x27;</span>, <span class="hljs-string">&#x27;50%&#x27;</span>],            data: [ &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">180</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;湖北&#x27;</span> &#125;,                    &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">88</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;云南&#x27;</span> &#125;,                    &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">120</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;北京&#x27;</span> &#125;,                    &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">130</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;山东&#x27;</span> &#125;,                    &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">135</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;河北&#x27;</span> &#125;,                    &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">66</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;江苏&#x27;</span> &#125;,                    &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">130</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;浙江&#x27;</span> &#125;,                    &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">150</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;四川&#x27;</span> &#125;].            sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>&#123;                 <span class="hljs-comment">//逆时针从大到小</span>                <span class="hljs-keyword">return</span> a.value - b.value;            &#125;),            roseType: <span class="hljs-string">&#x27;radius&#x27;</span>, <span class="hljs-comment">//&#x27;radius&#x27;扇区，&#x27;area&#x27;纯原</span>            animationType: <span class="hljs-string">&#x27;scale&#x27;</span>, <span class="hljs-comment">//初始动画效果，可选</span>            animationEasing: <span class="hljs-string">&#x27;quinticIn&#x27;</span>, <span class="hljs-comment">//初始动画的缓动效果。可选</span>            animationDelay: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">idx</span>) </span>&#123;                <span class="hljs-comment">//初始动画的延迟，支持回调函数，</span>                <span class="hljs-comment">//可以通过每个数据返回不同的 delay 时间实现更戏剧的初始动画效果。    </span>                <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">500</span>;            &#125;        &#125;]    &#125;;    <span class="hljs-comment">//使用刚指定的配置项和数据显示图表。</span>    myChart.setOption(option);&lt;/script&gt;</code></pre><h2 id="圆环图"><a href="#圆环图" class="headerlink" title="圆环图"></a>圆环图</h2><pre><code class="hljs javascript">&lt;body&gt;    &lt;div id=<span class="hljs-string">&quot;main&quot;</span> style=<span class="hljs-string">&quot;width: 600px;height:400px;&quot;</span>&gt;&lt;/div&gt;    &lt;script&gt;        <span class="hljs-keyword">var</span> myChart = echarts.init(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;main&#x27;</span>));        <span class="hljs-keyword">var</span> option = &#123;            tooltip: &#123; <span class="hljs-comment">//鼠标移入提示</span>                trigger: <span class="hljs-string">&#x27;item&#x27;</span>, <span class="hljs-comment">//圆形图专用</span>                formatter: <span class="hljs-string">&#x27;&#123;a&#125; &lt;br/&gt;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&#x27;</span> <span class="hljs-comment">//显示百分比</span>            &#125;,            legend: &#123;&#125;, <span class="hljs-comment">//在左上角显示圆心标签字的列表</span>            series: [&#123; <span class="hljs-comment">//数据</span>                startAngle: <span class="hljs-number">180</span>, <span class="hljs-comment">//圆环起始角度</span>                name: <span class="hljs-string">&#x27;访问来源&#x27;</span>, <span class="hljs-comment">//鼠标移入区块显示的字</span>                type: <span class="hljs-string">&#x27;pie&#x27;</span>, <span class="hljs-comment">//属性，圆</span>                radius: [<span class="hljs-string">&#x27;50%&#x27;</span>, <span class="hljs-string">&#x27;70%&#x27;</span>], <span class="hljs-comment">//[圆环厚度(空心)，圆环大小]</span>                avoidLabelOverlap: <span class="hljs-literal">false</span>, <span class="hljs-comment">//是否启用防止标签重叠策略</span>                label: &#123; <span class="hljs-comment">//把标签字显示，定位在圆心</span>                    show: <span class="hljs-literal">false</span>, <span class="hljs-comment">//显示</span>                    position: <span class="hljs-string">&#x27;center&#x27;</span> <span class="hljs-comment">//定位</span>                &#125;,                emphasis: &#123; <span class="hljs-comment">//鼠标移入显示标签字与否</span>                    label: &#123;                        show: <span class="hljs-literal">false</span>,                        fontSize: <span class="hljs-string">&#x27;30&#x27;</span>,                        fontWeight: <span class="hljs-string">&#x27;bold&#x27;</span>                    &#125;                &#125;,                labelLine: &#123;&#125;,                data: [                    &#123;                        value: <span class="hljs-number">100</span>,                        name: <span class="hljs-string">&#x27;额额&#x27;</span>,                        itemStyle: &#123;                            color: <span class="hljs-keyword">new</span> echarts.graphic.LinearGradient(                                <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, [&#123;                                    offset: <span class="hljs-number">0</span>,                                    color: <span class="hljs-string">&#x27;#00f8fc&#x27;</span>                                &#125;, &#123;                                    offset: <span class="hljs-number">1</span>,                                    color: <span class="hljs-string">&#x27;#0069cf&#x27;</span>                                &#125;]                            )                        &#125;                    &#125;, &#123;                        value: <span class="hljs-number">100</span>,                        name: <span class="hljs-string">&#x27;额额&#x27;</span>,                        itemStyle: &#123;                            color: <span class="hljs-string">&#x27;#04284d&#x27;</span>                        &#125;                    &#125;, &#123;                        value: <span class="hljs-number">200</span>,                        name: <span class="hljs-string">&#x27;额额&#x27;</span>,                        itemStyle: &#123;                            color: <span class="hljs-string">&#x27;transparent&#x27;</span>                        &#125;                    &#125;,                ]            &#125;]        &#125;;        <span class="hljs-comment">// 3.3 使用刚指定的配置项和数据显示图表。</span>        myChart.setOption(option);    &lt;/script&gt;</code></pre><h2 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h2><pre><code class="hljs javascript">&lt;body&gt;    &lt;div id=<span class="hljs-string">&quot;main&quot;</span> style=<span class="hljs-string">&quot;width: 800px;height:400px;&quot;</span>&gt;&lt;/div&gt;    &lt;script&gt;        <span class="hljs-keyword">var</span> myChart = echarts.init(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;main&#x27;</span>));        <span class="hljs-keyword">var</span> option = &#123;            title: &#123;                text: <span class="hljs-string">&#x27;单位：万&#x27;</span>, <span class="hljs-comment">//左上角大标题</span>                subtext: <span class="hljs-string">&#x27;59期&#x27;</span>, <span class="hljs-comment">//左上角副标题</span>                textStyle: &#123;                    color: <span class="hljs-string">&#x27;#0292ea&#x27;</span> <span class="hljs-comment">//大标题的颜色</span>                &#125;,                left: <span class="hljs-number">30</span> <span class="hljs-comment">//标题位移</span>            &#125;,            tooltip: &#123;                trigger: <span class="hljs-string">&#x27;axis&#x27;</span> <span class="hljs-comment">//移入图表提示线</span>            &#125;,            <span class="hljs-comment">//顶部小图标提示 ： 注意数组内容必须要和seriesl里面的name一致</span>            legend: &#123;                data: [<span class="hljs-string">&#x27;预期销售额&#x27;</span>, <span class="hljs-string">&#x27;实际销售额&#x27;</span>],                textStyle: &#123;                    color: <span class="hljs-string">&#x27;#0292ea&#x27;</span>                &#125;            &#125;,            <span class="hljs-comment">//右上角工具箱</span>            toolbox: &#123;                show: <span class="hljs-literal">true</span>,                feature: &#123;                    dataZoom: &#123;                        yAxisIndex: <span class="hljs-string">&#x27;none&#x27;</span>                    &#125;,                    dataView: &#123;                        readOnly: <span class="hljs-literal">false</span>                    &#125;,                    magicType: &#123;                        type: [<span class="hljs-string">&#x27;line&#x27;</span>, <span class="hljs-string">&#x27;bar&#x27;</span>]                    &#125;,                    restore: &#123;&#125;,                    saveAsImage: &#123;&#125;                &#125;            &#125;,            xAxis: &#123;                type: <span class="hljs-string">&#x27;category&#x27;</span>, <span class="hljs-comment">//坐标轴类型,可选value,time,log</span>                boundaryGap: <span class="hljs-literal">false</span>, <span class="hljs-comment">//坐标轴两边留白与否</span>                data: [<span class="hljs-string">&#x27;1月&#x27;</span>, <span class="hljs-string">&#x27;2月&#x27;</span>, <span class="hljs-string">&#x27;3月&#x27;</span>, <span class="hljs-string">&#x27;4月&#x27;</span>, <span class="hljs-string">&#x27;5月&#x27;</span>, <span class="hljs-string">&#x27;6月&#x27;</span>, <span class="hljs-string">&#x27;7月&#x27;</span>, <span class="hljs-string">&#x27;8月&#x27;</span>, <span class="hljs-string">&#x27;9月&#x27;</span>, <span class="hljs-string">&#x27;10月&#x27;</span>, <span class="hljs-string">&#x27;11月&#x27;</span>, <span class="hljs-string">&#x27;12月&#x27;</span>],                <span class="hljs-comment">//刻度文本</span>                axisLabel: &#123;                    color: <span class="hljs-string">&#x27;#0075d1&#x27;</span>                &#125;,                <span class="hljs-comment">//刻度线颜色</span>                axisTick: &#123;                    lineStyle: &#123;                        color: <span class="hljs-string">&#x27;#0075d1&#x27;</span>                    &#125;                &#125;,                <span class="hljs-comment">//坐标轴线</span>                axisLine: &#123;                    lineStyle: &#123;                        color: <span class="hljs-string">&#x27;#0075d1&#x27;</span>                    &#125;                &#125;,            &#125;,            yAxis: &#123;                type: <span class="hljs-string">&#x27;value&#x27;</span>, <span class="hljs-comment">//坐标轴类型,可选category,time,log</span>                axisLabel: &#123; <span class="hljs-comment">//y轴刻度数字颜色</span>                    color: <span class="hljs-string">&#x27;#0075d1&#x27;</span>                &#125;,                axisTick: &#123; <span class="hljs-comment">//y轴刻度尺线颜色</span>                    lineStyle: &#123;                        color: <span class="hljs-string">&#x27;#0075d1&#x27;</span>                    &#125;                &#125;,                axisLine: &#123; <span class="hljs-comment">//y坐标轴线样式</span>                    lineStyle: &#123;                        color: <span class="hljs-string">&#x27;red&#x27;</span>                    &#125;                &#125;,            &#125;,            series: [&#123;                    name: <span class="hljs-string">&#x27;预期销售额&#x27;</span>, <span class="hljs-comment">//鼠标移入显示的字</span>                    type: <span class="hljs-string">&#x27;line&#x27;</span>, <span class="hljs-comment">//折线图</span>                    smooth: <span class="hljs-literal">true</span>, <span class="hljs-comment">//曲线</span>                    symbolSize: <span class="hljs-number">8</span>, <span class="hljs-comment">//圈圈大小</span>                    data: [<span class="hljs-number">24</span>, <span class="hljs-number">40</span>, <span class="hljs-number">101</span>, <span class="hljs-number">134</span>, <span class="hljs-number">90</span>, <span class="hljs-number">230</span>, <span class="hljs-number">210</span>, <span class="hljs-number">230</span>, <span class="hljs-number">120</span>, <span class="hljs-number">230</span>, <span class="hljs-number">210</span>, <span class="hljs-number">120</span>],                &#125;, &#123;                    <span class="hljs-comment">//另一条线，一条线就是一个对象</span>                    name: <span class="hljs-string">&#x27;实际销售额&#x27;</span>,                    type: <span class="hljs-string">&#x27;line&#x27;</span>,                    smooth: <span class="hljs-literal">true</span>,                    <span class="hljs-comment">//圈圈大小</span>                    symbolSize: <span class="hljs-number">8</span>,                    data: [<span class="hljs-number">40</span>, <span class="hljs-number">64</span>, <span class="hljs-number">191</span>, <span class="hljs-number">324</span>, <span class="hljs-number">290</span>, <span class="hljs-number">330</span>, <span class="hljs-number">310</span>, <span class="hljs-number">213</span>, <span class="hljs-number">180</span>, <span class="hljs-number">200</span>, <span class="hljs-number">180</span>, <span class="hljs-number">79</span>],                &#125;,            ]        &#125;;        <span class="hljs-comment">// 3.3 使用刚指定的配置项和数据显示图表。</span>        myChart.setOption(option);    &lt;/script&gt;&lt;/body&gt;</code></pre><h2 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h2><pre><code class="hljs javascript">&lt;body&gt;    &lt;!-- <span class="hljs-number">2.</span>写HTML结构 --&gt;    &lt;!-- 为 ECharts 准备一个具备大小（宽高）的 DOM --&gt;    &lt;div id=<span class="hljs-string">&quot;main&quot;</span> style=<span class="hljs-string">&quot;width: 600px;height:400px;&quot;</span>&gt;&lt;/div&gt;    &lt;script&gt;        <span class="hljs-keyword">var</span> myChart = echarts.init(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;main&#x27;</span>));        <span class="hljs-comment">/*自定义内容样式的思路 </span><span class="hljs-comment">        1. series里面的data本质是一个对象</span><span class="hljs-comment">        2. 如果给的是具体数值，则会加载默认样式</span><span class="hljs-comment">        3. 如果希望使用自定义内容，则只需要创建data对象，并且单独设置样式</span><span class="hljs-comment">         */</span>        <span class="hljs-keyword">let</span> item = &#123;            value: <span class="hljs-number">1000</span>,            itemStyle: &#123;                color: <span class="hljs-string">&#x27;rgba(0,0,0,0.5)&#x27;</span>            &#125;        &#125;        <span class="hljs-keyword">let</span> option = &#123;            backgroundColor: <span class="hljs-string">&#x27;#222&#x27;</span>, <span class="hljs-comment">//背景颜色</span>            tooltip: &#123; <span class="hljs-comment">//鼠标移入提示</span>                trigger: <span class="hljs-string">&#x27;axis&#x27;</span>, <span class="hljs-comment">//触发类型。</span>                axisPointer: &#123; <span class="hljs-comment">// 坐标轴指示器，坐标轴触发有效</span>                    type: <span class="hljs-string">&#x27;cross&#x27;</span> <span class="hljs-comment">// 默认为直线，可选为：&#x27;line&#x27; | &#x27;shadow&#x27;</span>                &#125;            &#125;,            grid: &#123; <span class="hljs-comment">//类似于padding</span>                left: <span class="hljs-string">&#x27;3%&#x27;</span>,                right: <span class="hljs-string">&#x27;4%&#x27;</span>,                bottom: <span class="hljs-string">&#x27;3%&#x27;</span>,                containLabel: <span class="hljs-literal">true</span>            &#125;,            xAxis: [&#123; <span class="hljs-comment">//x轴</span>                type: <span class="hljs-string">&#x27;category&#x27;</span>,                data: [<span class="hljs-string">&#x27;上海&#x27;</span>, <span class="hljs-string">&#x27;广州&#x27;</span>, <span class="hljs-string">&#x27;北京&#x27;</span>, <span class="hljs-string">&#x27;深圳&#x27;</span>, <span class="hljs-string">&#x27;合肥&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;......&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;杭州&#x27;</span>, <span class="hljs-string">&#x27;厦门&#x27;</span>, <span class="hljs-string">&#x27;济南&#x27;</span>, <span class="hljs-string">&#x27;成都&#x27;</span>, <span class="hljs-string">&#x27;重庆&#x27;</span>],                axisLabel: &#123; <span class="hljs-comment">//刻度文本</span>                    color: <span class="hljs-string">&#x27;#0075d1&#x27;</span>                &#125;,                axisTick: &#123; <span class="hljs-comment">//刻度线颜色</span>                    lineStyle: &#123;                        color: <span class="hljs-string">&#x27;#0075d1&#x27;</span>                    &#125;                &#125;,                axisLine: &#123; <span class="hljs-comment">//坐标轴线</span>                    lineStyle: &#123;                        color: <span class="hljs-string">&#x27;#0075d1&#x27;</span>                    &#125;                &#125;,                splitLine: &#123; <span class="hljs-comment">//x轴数据的分割线，垂直线</span>                    show: <span class="hljs-literal">true</span>,                    lineStyle: &#123;                        <span class="hljs-comment">// 使用深浅的间隔色</span>                        color: [<span class="hljs-string">&#x27;#f00&#x27;</span>, <span class="hljs-string">&#x27;#00f&#x27;</span>]                    &#125;                &#125;            &#125;, &#123;                <span class="hljs-comment">//x轴右侧的线</span>                axisLine: &#123;                    lineStyle: &#123;                        color: <span class="hljs-string">&#x27;pink&#x27;</span>                    &#125;                &#125;,            &#125;],            yAxis: [&#123; <span class="hljs-comment">//y轴</span>                type: <span class="hljs-string">&#x27;value&#x27;</span>,                axisLabel: &#123; <span class="hljs-comment">//刻度文本</span>                    color: <span class="hljs-string">&#x27;#0075d1&#x27;</span>                &#125;,                axisTick: &#123; <span class="hljs-comment">//刻度线颜色</span>                    lineStyle: &#123;                        color: <span class="hljs-string">&#x27;#0075d1&#x27;</span>                    &#125;                &#125;,                axisLine: &#123; <span class="hljs-comment">//坐标轴线</span>                    lineStyle: &#123;                        color: <span class="hljs-string">&#x27;#0075d1&#x27;</span>                    &#125;                &#125;,                splitLine: &#123; <span class="hljs-comment">//x轴数据的分割线，垂直线</span>                    show: <span class="hljs-literal">true</span>,                    lineStyle: &#123;                        <span class="hljs-comment">// 使用深浅的间隔色</span>                        color: [<span class="hljs-string">&#x27;#0075d1&#x27;</span>]                    &#125;                &#125;            &#125;, &#123;                <span class="hljs-comment">//y轴右侧的线</span>                axisLine: &#123;                    lineStyle: &#123;                        color: <span class="hljs-string">&#x27;yellow&#x27;</span>                    &#125;                &#125;,            &#125;],            series: [&#123;                name: <span class="hljs-string">&#x27;直接访问&#x27;</span>, <span class="hljs-comment">//移入显示的字</span>                type: <span class="hljs-string">&#x27;bar&#x27;</span>, <span class="hljs-comment">//柱形图</span>                barWidth: <span class="hljs-string">&#x27;60%&#x27;</span>, <span class="hljs-comment">//柱子的宽度</span>                data: [<span class="hljs-number">2100</span>, <span class="hljs-number">1900</span>, <span class="hljs-number">1700</span>, <span class="hljs-number">1560</span>, <span class="hljs-number">1400</span>, item, item, item, <span class="hljs-number">900</span>, <span class="hljs-number">750</span>, <span class="hljs-number">600</span>, <span class="hljs-number">480</span>, <span class="hljs-number">240</span>],                itemStyle: &#123;                    color: <span class="hljs-keyword">new</span> echarts.graphic.LinearGradient( <span class="hljs-comment">//渐变色</span>                        <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, [&#123;                            offset: <span class="hljs-number">0</span>,                            color: <span class="hljs-string">&#x27;#00fefd&#x27;</span>                        &#125;, &#123;                            offset: <span class="hljs-number">1</span>,                            color: <span class="hljs-string">&#x27;#0065cd&#x27;</span>                        &#125;]                    )                &#125;,            &#125;]        &#125;;        <span class="hljs-comment">// 3.3 使用刚指定的配置项和数据显示图表。</span>        myChart.setOption(option);    &lt;/script&gt;&lt;/body&gt;</code></pre><h2 id="迁徙图"><a href="#迁徙图" class="headerlink" title="迁徙图"></a>迁徙图</h2><pre><code class="hljs javascript">&lt;body&gt;    &lt;!-- <span class="hljs-number">2.</span>写HTML结构 --&gt;    &lt;!-- 为 ECharts 准备一个具备大小（宽高）的 DOM --&gt;    &lt;div id=<span class="hljs-string">&quot;main&quot;</span> style=<span class="hljs-string">&quot;width: 600px;height:400px;&quot;</span>&gt;&lt;/div&gt;    &lt;script&gt;        <span class="hljs-comment">/* 3.JS初始化 */</span>        <span class="hljs-comment">//3.1 创建echarts对象</span>        <span class="hljs-comment">// 基于准备好的dom，初始化echarts实例</span>        <span class="hljs-keyword">var</span> myChart = echarts.init(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;main&#x27;</span>));        <span class="hljs-comment">// 3.2 指定图表的配置项和数据</span>        <span class="hljs-keyword">var</span> chinaGeoCoordMap = &#123;            <span class="hljs-string">&#x27;黑龙江&#x27;</span>: [<span class="hljs-number">127.9688</span>, <span class="hljs-number">45.368</span>],            <span class="hljs-string">&#x27;内蒙古&#x27;</span>: [<span class="hljs-number">110.3467</span>, <span class="hljs-number">41.4899</span>],            <span class="hljs-string">&quot;吉林&quot;</span>: [<span class="hljs-number">125.8154</span>, <span class="hljs-number">44.2584</span>],            <span class="hljs-string">&#x27;北京市&#x27;</span>: [<span class="hljs-number">116.4551</span>, <span class="hljs-number">40.2539</span>],            <span class="hljs-string">&quot;辽宁&quot;</span>: [<span class="hljs-number">123.1238</span>, <span class="hljs-number">42.1216</span>],            <span class="hljs-string">&quot;河北&quot;</span>: [<span class="hljs-number">114.4995</span>, <span class="hljs-number">38.1006</span>],            <span class="hljs-string">&quot;天津&quot;</span>: [<span class="hljs-number">117.4219</span>, <span class="hljs-number">39.4189</span>],            <span class="hljs-string">&quot;山西&quot;</span>: [<span class="hljs-number">112.3352</span>, <span class="hljs-number">37.9413</span>],            <span class="hljs-string">&quot;陕西&quot;</span>: [<span class="hljs-number">109.1162</span>, <span class="hljs-number">34.2004</span>],            <span class="hljs-string">&quot;甘肃&quot;</span>: [<span class="hljs-number">103.5901</span>, <span class="hljs-number">36.3043</span>],            <span class="hljs-string">&quot;宁夏&quot;</span>: [<span class="hljs-number">106.3586</span>, <span class="hljs-number">38.1775</span>],            <span class="hljs-string">&quot;青海&quot;</span>: [<span class="hljs-number">101.4038</span>, <span class="hljs-number">36.8207</span>],            <span class="hljs-string">&quot;新疆&quot;</span>: [<span class="hljs-number">87.9236</span>, <span class="hljs-number">43.5883</span>],            <span class="hljs-string">&quot;西藏&quot;</span>: [<span class="hljs-number">91.11</span>, <span class="hljs-number">29.97</span>],            <span class="hljs-string">&quot;四川&quot;</span>: [<span class="hljs-number">103.9526</span>, <span class="hljs-number">30.7617</span>],            <span class="hljs-string">&quot;重庆&quot;</span>: [<span class="hljs-number">108.384366</span>, <span class="hljs-number">30.439702</span>],            <span class="hljs-string">&quot;山东&quot;</span>: [<span class="hljs-number">117.1582</span>, <span class="hljs-number">36.8701</span>],            <span class="hljs-string">&quot;河南&quot;</span>: [<span class="hljs-number">113.4668</span>, <span class="hljs-number">34.6234</span>],            <span class="hljs-string">&quot;江苏&quot;</span>: [<span class="hljs-number">118.8062</span>, <span class="hljs-number">31.9208</span>],            <span class="hljs-string">&quot;安徽&quot;</span>: [<span class="hljs-number">117.29</span>, <span class="hljs-number">32.0581</span>],            <span class="hljs-string">&quot;湖北&quot;</span>: [<span class="hljs-number">114.3896</span>, <span class="hljs-number">30.6628</span>],            <span class="hljs-string">&quot;浙江&quot;</span>: [<span class="hljs-number">119.5313</span>, <span class="hljs-number">29.8773</span>],            <span class="hljs-string">&quot;福建&quot;</span>: [<span class="hljs-number">119.4543</span>, <span class="hljs-number">25.9222</span>],            <span class="hljs-string">&quot;江西&quot;</span>: [<span class="hljs-number">116.0046</span>, <span class="hljs-number">28.6633</span>],            <span class="hljs-string">&quot;湖南&quot;</span>: [<span class="hljs-number">113.0823</span>, <span class="hljs-number">28.2568</span>],            <span class="hljs-string">&quot;贵州&quot;</span>: [<span class="hljs-number">106.6992</span>, <span class="hljs-number">26.7682</span>],            <span class="hljs-string">&quot;云南&quot;</span>: [<span class="hljs-number">102.9199</span>, <span class="hljs-number">25.4663</span>],            <span class="hljs-string">&quot;广东&quot;</span>: [<span class="hljs-number">113.12244</span>, <span class="hljs-number">23.009505</span>],            <span class="hljs-string">&quot;广西&quot;</span>: [<span class="hljs-number">108.479</span>, <span class="hljs-number">23.1152</span>],            <span class="hljs-string">&quot;海南&quot;</span>: [<span class="hljs-number">110.3893</span>, <span class="hljs-number">19.8516</span>],            <span class="hljs-string">&#x27;上海&#x27;</span>: [<span class="hljs-number">121.4648</span>, <span class="hljs-number">31.2891</span>],            <span class="hljs-string">&quot;深圳&quot;</span>: [<span class="hljs-number">114.2015</span>, <span class="hljs-number">22.1246</span>] <span class="hljs-comment">//添加城市</span>        &#125;;        <span class="hljs-keyword">var</span> chinaDatas = [            [&#123;                name: <span class="hljs-string">&#x27;黑龙江&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;内蒙古&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;吉林&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;辽宁&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;河北&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;天津&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;山西&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;陕西&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;甘肃&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;宁夏&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;青海&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;新疆&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;西藏&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;四川&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;重庆&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;山东&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;河南&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;江苏&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;安徽&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;湖北&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;浙江&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;福建&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;江西&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;湖南&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;贵州&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;广西&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;海南&#x27;</span>,                value: <span class="hljs-number">0</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;上海&#x27;</span>,                value: <span class="hljs-number">1</span>            &#125;],            [&#123;                name: <span class="hljs-string">&#x27;深圳&#x27;</span>,                value: <span class="hljs-number">1</span>            &#125;]        ];        <span class="hljs-keyword">var</span> convertData = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) </span>&#123;            <span class="hljs-keyword">var</span> res = [];            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; data.length; i++) &#123;                <span class="hljs-keyword">var</span> dataItem = data[i];                <span class="hljs-keyword">var</span> fromCoord = chinaGeoCoordMap[dataItem[<span class="hljs-number">0</span>].name];                <span class="hljs-keyword">var</span> toCoord = [<span class="hljs-number">116.4551</span>, <span class="hljs-number">40.2539</span>];                <span class="hljs-keyword">if</span> (fromCoord &amp;&amp; toCoord) &#123;                    res.push([&#123;                        coord: fromCoord,                        value: dataItem[<span class="hljs-number">0</span>].value                    &#125;, &#123;                        coord: toCoord,                    &#125;]);                &#125;            &#125;            <span class="hljs-keyword">return</span> res;        &#125;;        <span class="hljs-keyword">var</span> series = [];        [            [<span class="hljs-string">&#x27;北京市&#x27;</span>, chinaDatas]        ].forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item, i</span>) </span>&#123;            <span class="hljs-built_in">console</span>.log(item)            series.push(&#123;                    type: <span class="hljs-string">&#x27;lines&#x27;</span>,                    zlevel: <span class="hljs-number">2</span>,                    effect: &#123;                        show: <span class="hljs-literal">true</span>,                        period: <span class="hljs-number">4</span>, <span class="hljs-comment">//箭头指向速度，值越小速度越快</span>                        trailLength: <span class="hljs-number">0.02</span>, <span class="hljs-comment">//特效尾迹长度[0,1]值越大，尾迹越长重</span>                        symbol: <span class="hljs-string">&#x27;circle&#x27;</span>, <span class="hljs-comment">//箭头图标</span>                        symbolSize: <span class="hljs-number">5</span>, <span class="hljs-comment">//图标大小</span>                    &#125;,                    lineStyle: &#123;                        normal: &#123;                            width: <span class="hljs-number">1</span>, <span class="hljs-comment">//尾迹线条宽度</span>                            opacity: <span class="hljs-number">1</span>, <span class="hljs-comment">//尾迹线条透明度</span>                            curveness: <span class="hljs-number">.3</span> <span class="hljs-comment">//尾迹线条曲直度</span>                        &#125;                    &#125;,                    data: convertData(item[<span class="hljs-number">1</span>])                &#125;, &#123;                    type: <span class="hljs-string">&#x27;effectScatter&#x27;</span>,                    coordinateSystem: <span class="hljs-string">&#x27;geo&#x27;</span>,                    zlevel: <span class="hljs-number">2</span>,                    rippleEffect: &#123; <span class="hljs-comment">//涟漪特效</span>                        period: <span class="hljs-number">4</span>, <span class="hljs-comment">//动画时间，值越小速度越快</span>                        brushType: <span class="hljs-string">&#x27;stroke&#x27;</span>, <span class="hljs-comment">//波纹绘制方式 stroke, fill</span>                        scale: <span class="hljs-number">4</span> <span class="hljs-comment">//波纹圆环最大限制，值越大波纹越大</span>                    &#125;,                    label: &#123;                        normal: &#123;                            show: <span class="hljs-literal">true</span>, <span class="hljs-comment">//显示地名</span>                            position: <span class="hljs-string">&#x27;right&#x27;</span>, <span class="hljs-comment">//显示位置</span>                            offset: [<span class="hljs-number">5</span>, <span class="hljs-number">0</span>], <span class="hljs-comment">//偏移设置</span>                            formatter: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">params</span>) </span>&#123; <span class="hljs-comment">//圆环显示文字</span>                                <span class="hljs-keyword">return</span> params.data.name;                            &#125;,                            fontSize: <span class="hljs-number">13</span>                        &#125;,                        emphasis: &#123;                            show: <span class="hljs-literal">true</span>                        &#125;                    &#125;,                    symbol: <span class="hljs-string">&#x27;circle&#x27;</span>,                    symbolSize: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val</span>) </span>&#123;                        <span class="hljs-keyword">return</span> <span class="hljs-number">5</span> + val[<span class="hljs-number">2</span>] * <span class="hljs-number">5</span>; <span class="hljs-comment">//圆环大小</span>                    &#125;,                    itemStyle: &#123;                        normal: &#123;                            show: <span class="hljs-literal">false</span>,                            color: <span class="hljs-string">&#x27;#f00&#x27;</span>                        &#125;                    &#125;,                    data: item[<span class="hljs-number">1</span>].map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dataItem</span>) </span>&#123;                        <span class="hljs-keyword">return</span> &#123;                            name: dataItem[<span class="hljs-number">0</span>].name,                            value: chinaGeoCoordMap[dataItem[<span class="hljs-number">0</span>].name].concat([dataItem[<span class="hljs-number">0</span>].value])                        &#125;;                    &#125;),                &#125;,                <span class="hljs-comment">//被攻击点</span>                &#123;                    type: <span class="hljs-string">&#x27;scatter&#x27;</span>,                    coordinateSystem: <span class="hljs-string">&#x27;geo&#x27;</span>,                    zlevel: <span class="hljs-number">2</span>,                    rippleEffect: &#123;                        period: <span class="hljs-number">4</span>,                        brushType: <span class="hljs-string">&#x27;stroke&#x27;</span>,                        scale: <span class="hljs-number">4</span>                    &#125;,                    label: &#123;                        normal: &#123;                            show: <span class="hljs-literal">true</span>,                            position: <span class="hljs-string">&#x27;right&#x27;</span>,                            <span class="hljs-comment">//offset:[5, 0],</span>                            color: <span class="hljs-string">&#x27;#0f0&#x27;</span>,                            formatter: <span class="hljs-string">&#x27;&#123;b&#125;&#x27;</span>,                            textStyle: &#123;                                color: <span class="hljs-string">&quot;#ff0&quot;</span>                            &#125;                        &#125;,                        emphasis: &#123;                            show: <span class="hljs-literal">false</span>,                            color: <span class="hljs-string">&quot;#ff0&quot;</span>                        &#125;                    &#125;,                    symbol: <span class="hljs-string">&#x27;pin&#x27;</span>,                    symbolSize: <span class="hljs-number">50</span>,                    data: [&#123;                        name: item[<span class="hljs-number">0</span>],                        value: chinaGeoCoordMap[item[<span class="hljs-number">0</span>]].concat([<span class="hljs-number">10</span>]),                    &#125;],                &#125;            );        &#125;);        option = &#123;            tooltip: &#123;                trigger: <span class="hljs-string">&#x27;item&#x27;</span>,                backgroundColor: <span class="hljs-string">&#x27;rgba(166, 200, 76, 0.82)&#x27;</span>,                borderColor: <span class="hljs-string">&#x27;#FFFFCC&#x27;</span>,                showDelay: <span class="hljs-number">0</span>,                hideDelay: <span class="hljs-number">0</span>,                enterable: <span class="hljs-literal">true</span>,                transitionDuration: <span class="hljs-number">0</span>,                extraCssText: <span class="hljs-string">&#x27;z-index:100&#x27;</span>,                formatter: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">params, ticket, callback</span>) </span>&#123;                    <span class="hljs-comment">//根据业务自己拓展要显示的内容</span>                    <span class="hljs-keyword">var</span> res = <span class="hljs-string">&quot;&quot;</span>;                    <span class="hljs-keyword">var</span> name = params.name;                    <span class="hljs-keyword">var</span> value = params.value[params.seriesIndex + <span class="hljs-number">1</span>];                    res = <span class="hljs-string">&quot;&lt;span style=&#x27;color:#fff;&#x27;&gt;&quot;</span> + name + <span class="hljs-string">&quot;&lt;/span&gt;&lt;br/&gt;数据：&quot;</span> + value;                    <span class="hljs-keyword">return</span> res;                &#125;            &#125;,            backgroundColor: <span class="hljs-string">&quot;#013954&quot;</span>,            visualMap: &#123; <span class="hljs-comment">//图例值控制</span>                min: <span class="hljs-number">0</span>,                max: <span class="hljs-number">1</span>,                calculable: <span class="hljs-literal">true</span>,                show: <span class="hljs-literal">false</span>,                color: [<span class="hljs-string">&#x27;#f44336&#x27;</span>, <span class="hljs-string">&#x27;#fc9700&#x27;</span>, <span class="hljs-string">&#x27;#ffde00&#x27;</span>, <span class="hljs-string">&#x27;#ffde00&#x27;</span>, <span class="hljs-string">&#x27;#00eaff&#x27;</span>],                textStyle: &#123;                    color: <span class="hljs-string">&#x27;#fff&#x27;</span>                &#125;            &#125;,            geo: &#123;                map: <span class="hljs-string">&#x27;china&#x27;</span>,                zoom: <span class="hljs-number">1.2</span>,                label: &#123;                    emphasis: &#123;                        show: <span class="hljs-literal">false</span>                    &#125;                &#125;,                roam: <span class="hljs-literal">true</span>, <span class="hljs-comment">//是否允许缩放</span>                itemStyle: &#123;                    normal: &#123;                        color: <span class="hljs-string">&#x27;rgba(51, 69, 89, .5)&#x27;</span>, <span class="hljs-comment">//地图背景色</span>                        borderColor: <span class="hljs-string">&#x27;#516a89&#x27;</span>, <span class="hljs-comment">//省市边界线00fcff 516a89</span>                        borderWidth: <span class="hljs-number">1</span>                    &#125;,                    emphasis: &#123;                        color: <span class="hljs-string">&#x27;rgba(37, 43, 61, .5)&#x27;</span> <span class="hljs-comment">//悬浮背景</span>                    &#125;                &#125;            &#125;,            series: series        &#125;;        <span class="hljs-comment">// 3.3 使用刚指定的配置项和数据显示图表。</span>        myChart.setOption(option);    &lt;/script&gt;&lt;/body&gt;</code></pre>]]></content>
    
    
    <categories>
      
      <category>css</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css css3</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cmd</title>
    <link href="/2020/08/18/cmd%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2020/08/18/cmd%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>记录一下命令行，方便自己快速查阅</p><a id="more"></a><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td>CD</td><td>显示当前目录的名称或将其更改。</td></tr><tr><td>CHDIR</td><td>显示当前目录的名称或将其更改。</td></tr><tr><td>DIR</td><td>显示一个目录中的文件和子目录。</td></tr><tr><td>CLS</td><td>清除屏幕。</td></tr><tr><td>DEL</td><td>删除至少一个文件。</td></tr><tr><td>MD</td><td>创建一个目录。</td></tr><tr><td>RD</td><td>删除目录。</td></tr><tr><td>REN</td><td>重命名文件。</td></tr><tr><td>TREE</td><td>以图形方式显示驱动程序或路径的目录结构。</td></tr><tr><td>ipconfig</td><td>查看网络配置</td></tr><tr><td>ping</td><td>检查与目标主机的连通性</td></tr><tr><td>nslookup</td><td>查看DNS域名解析记录</td></tr><tr><td>d</td><td>跳转到其他硬盘</td></tr><tr><td>&gt;</td><td>重定向输出并覆盖源文件。</td></tr><tr><td>&gt;&gt;</td><td>重定向输出追加到文件末尾</td></tr></tbody></table><h2 id="cmd-gt-重定向输出并覆盖源文件。"><a href="#cmd-gt-重定向输出并覆盖源文件。" class="headerlink" title="cmd &gt;重定向输出并覆盖源文件。"></a>cmd &gt;重定向输出并覆盖源文件。</h2><p>​      例如</p><p>​      echo hello &gt;c:\1.txt</p><p>​      1.txt的文件内容先被清空，然后写入hello。</p><h2 id="cmd-gt-gt-重定向输出追加到文件末尾"><a href="#cmd-gt-gt-重定向输出追加到文件末尾" class="headerlink" title="cmd &gt;&gt;重定向输出追加到文件末尾"></a>cmd &gt;&gt;重定向输出追加到文件末尾</h2><p>​      例如：</p><p>​      echo hello &gt;c:\1.txt</p><p>​      在1.txt文件末尾加上hello</p><h2 id="cd-desktop"><a href="#cd-desktop" class="headerlink" title="cd desktop"></a><em>cd desktop</em></h2><p>进入桌面</p>]]></content>
    
    
    <categories>
      
      <category>cmd</category>
      
    </categories>
    
    
    <tags>
      
      <tag>windows cmd</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>css3长度单位</title>
    <link href="/2020/08/18/css3%E9%95%BF%E5%BA%A6%E5%8D%95%E4%BD%8D/"/>
    <url>/2020/08/18/css3%E9%95%BF%E5%BA%A6%E5%8D%95%E4%BD%8D/</url>
    
    <content type="html"><![CDATA[<p>vw、vh、vmin、vmax、rem</p><a id="more"></a><h1 id="vw、vh、vmin、vmax"><a href="#vw、vh、vmin、vmax" class="headerlink" title="vw、vh、vmin、vmax"></a>vw、vh、vmin、vmax</h1><p>这四个单位都是基于视口的。那么，什么是视口呢，我们来看一段代码：</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width,initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no&quot;</span>&gt;</span></code></pre><p>其中，浏览器利用 meta 标签里面的 width 来改变浏览器的视口大小，将 width 设置为设备的宽度 device-width。我们可以使用document.documentElement.clientWidth 获取浏览器的视口大小。</p><h4 id="含义"><a href="#含义" class="headerlink" title="含义"></a>含义</h4><p>vw: 视口宽度的百分比（1vw 等于视口宽度的 1%）<br> vh: 视口高度的百分比（1vh 等于视口高度的 1%）<br> vmin: 选取 vw 和 vh 中最小的那个<br> vmax: 选取 vw 和 vh 中最大的那个</p><p>vw、vh 是基于视口的，而不是父元素。1vw 等于1/100 的视口宽度，1vh 等于1/100 的视口高度，比如：<br> 浏览器高度 950px，宽度为 1920px, 1vh = 950px/100 = 9.5 px，1vw = 1920px/100 =19.2 px</p><h1 id="vw、vh、％-的区别"><a href="#vw、vh、％-的区别" class="headerlink" title="vw、vh、％ 的区别"></a>vw、vh、％ 的区别</h1><ol><li>％ 是相对于父元素的大小设定的比率，vw vh 是视口大小决定的</li><li>vw、vh 能直接获取高度，而 ％ 如果没有设置body的高度情况下，是无法获取可视区域的高度。</li></ol><h1 id="vmin、vmax-用处"><a href="#vmin、vmax-用处" class="headerlink" title="vmin、vmax 用处"></a>vmin、vmax 用处</h1><p>做移动页面开发时，如果使用 vw、wh 设置字体大小（比如 5vw），在竖屏和横屏状态下显示的字体大小是不一样的。<br> 由于 vmin 和 vmax 是当前较小的 vw 和 vh 和当前较大的 vw 和 vh。这里就可以用到 vmin 和 vmax。使得文字大小在横竖屏下保持一致。</p><h1 id="vw、vh、rem-相比的优势"><a href="#vw、vh、rem-相比的优势" class="headerlink" title="vw、vh、rem 相比的优势"></a>vw、vh、rem 相比的优势</h1><ol><li>如果使用 rem ，我们页面的头部引入 js 来动态设置页面 html 的 font-size，一般情况下基于屏幕的宽度来计算：var rem = docEl.clientWidth / 10;docEl.style.fontSize = rem + ‘px’</li><li>css 这块，使用 less 或者 scss 来动态计算 dom 的实际 rem 值</li></ol><pre><code class="hljs php">@<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">px2rem</span>(<span class="hljs-params">$size</span>) </span>&#123;  $remSize: $size / <span class="hljs-number">20</span>;  @<span class="hljs-keyword">return</span> <span class="hljs-comment">#&#123;$remSize&#125;rem;</span>&#125;</code></pre><p>因此会有问题：</p><ol><li>依赖页面头部的js设置，虽说基本上不会阻塞页面渲染，但是放在头部始终要进行一次dom计算，不算优雅。</li><li>通常使用宽度来计算 html 的 font-size 时，对于那种很宽的手机或者是ipad，会导致适配的不准确</li></ol><p>如果使用 vmin 可以规避上面的问题：</p><ol><li>不依赖js执行。</li><li>选取宽高之中较小的值进行适配</li></ol><h1 id="rem-em-的区别"><a href="#rem-em-的区别" class="headerlink" title="rem em 的区别"></a>rem em 的区别</h1><ol><li>两者都是相对单位</li><li>rem 是相对于根元素（html）的字体大小</li><li>em 是相对于其父元素的字体大小</li></ol><p>对于一些固定的元素，我们不推荐使用 rem，而改为使用 px 去确保在同一屏幕上保持一致，比如字体 font-size，这个更趋向于阅读的实用性，不适合排版布局</p><p>这里给大家提供了一个px、em、rem单位的转换工具：<a href="http://pxtoem.com/">http://pxtoem.com/</a></p><h1 id="浏览器兼容性"><a href="#浏览器兼容性" class="headerlink" title="浏览器兼容性"></a>浏览器兼容性</h1><p>桌面 pc:</p><ul><li>Chrome：自 26 版起就完美支持（2013年2月）</li><li>Firefox：自 19 版起就完美支持（2013年1月）</li><li>Safari：自 6.1 版起就完美支持（2013年10月）</li><li>Opera：自 15 版起就完美支持（2013年7月）</li><li>IE：自 IE10 起（包括 Edge）到现在还只是部分支持（不支持 vmax，同时 vm 代替 vmin）</li></ul><p>移动设备</p><ul><li>Android：自 4.4 版起就完美支持（2013年12月）</li><li>iOS：自 iOS8 版起就完美支持（2014年9月）</li></ul><p>原作链接：<a href="https://www.jianshu.com/p/fe36aa3e5fc6">https://www.jianshu.com/p/fe36aa3e5fc6</a></p>]]></content>
    
    
    <categories>
      
      <category>css</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css css3</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>less</title>
    <link href="/2020/08/15/Less%E5%85%A5%E9%97%A8/"/>
    <url>/2020/08/15/Less%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<p>记录一下less，方便自己快速查阅</p><a id="more"></a><h2 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h2><p>Less是一门CSS预处理语言，它扩展了CSS语言，增加了变量，Mixin，函数等特性，使CSS更易维护和扩展。</p><p><code>详细了解请戳我</code>    👉    <a href='http://lesscss.cn/'>Less中文网</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="通过npm安装"><a href="#通过npm安装" class="headerlink" title="通过npm安装"></a>通过npm安装</h3><p>全局安装</p><blockquote><p>npm install -g less</p></blockquote><p>查看版本号</p><blockquote><p>lessc -v</p></blockquote><p>使用方法</p><blockquote><p>创建一个test.less文件</p><p>cd到当前目录，命令窗口:  lessc test.less test.css</p></blockquote><h3 id="vsCode安装"><a href="#vsCode安装" class="headerlink" title="vsCode安装"></a>vsCode安装</h3><blockquote><p>扩展商店    👉    Easy LESS</p></blockquote><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><pre><code class="hljs less"><span class="hljs-variable">@width:</span> <span class="hljs-number">10px</span>;<span class="hljs-variable">@color:</span> zz;<span class="hljs-variable">@zz:</span>green;<span class="hljs-selector-id">#box</span>&#123;     <span class="hljs-attribute">widht</span>:<span class="hljs-variable">@width</span>;    <span class="hljs-attribute">color</span>:<span class="hljs-variable">@@color</span> <span class="hljs-comment">// 相当于@zz</span>&#125;</code></pre><p>此时#box的宽为10px;    颜色是green</p><h3 id="混合-Mixins"><a href="#混合-Mixins" class="headerlink" title="混合(Mixins)"></a>混合(Mixins)</h3><pre><code class="hljs less"><span class="hljs-selector-class">.testClass</span> &#123; <span class="hljs-attribute">width</span>:<span class="hljs-number">10px</span> &#125;<span class="hljs-selector-id">#box</span>&#123; <span class="hljs-selector-class">.testClass</span>(); &#125;</code></pre><p>此时#box拥有.testClass的属性</p><p>你也可以使用 <code>#ids</code> 作为 mixin 使用</p><h3 id="嵌套写法"><a href="#嵌套写法" class="headerlink" title="嵌套写法"></a>嵌套写法</h3><pre><code class="hljs less"><span class="hljs-selector-id">#box</span>&#123;    <span class="hljs-attribute">width</span>:<span class="hljs-number">10px</span>;    <span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-pseudo">:hover</span>&#123;&#125;    <span class="hljs-selector-tag">p</span>&#123;        <span class="hljs-attribute">width</span>:<span class="hljs-number">5px</span>;    &#125;&#125;</code></pre><p>相当于 #box:hover{};</p><h3 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h3><pre><code class="hljs less"><span class="hljs-variable">@widht:</span> <span class="hljs-number">2px</span> + <span class="hljs-number">8px</span>; <span class="hljs-comment">// 结果是10px</span><span class="hljs-variable">@test:</span> <span class="hljs-variable">@widht</span> + <span class="hljs-variable">@widht</span>;<span class="hljs-comment">// 结果是20px</span><span class="hljs-variable">@color:</span> <span class="hljs-number">#224488</span> / <span class="hljs-number">2</span>; <span class="hljs-comment">// 结果是#112244</span><span class="hljs-attribute">background-color</span>: <span class="hljs-number">#112244</span> + <span class="hljs-number">#111</span>; <span class="hljs-comment">// 结果是#223355</span></code></pre><p>支持对任何，数字，颜色，变量。加减乘除。</p><p><code>以左边数的单位为准，如果失去意义就忽略单位</code>。</p><h3 id="calc-特例"><a href="#calc-特例" class="headerlink" title="calc() 特例"></a>calc() 特例</h3><pre><code class="hljs less"><span class="hljs-variable">@var:</span> <span class="hljs-number">50px</span>/<span class="hljs-number">2</span>;<span class="hljs-attribute">width</span>: calc(<span class="hljs-number">50%</span> + <span class="hljs-variable">@var</span>);  <span class="hljs-comment">// 结果是 calc(50% + 25px)</span></code></pre><p>为了保持和原生的一致，只会计算变量函数的值，calc里面的不动</p><p><a href='https://www.runoob.com/cssref/func-calc.html'>css原生calc()点我，用于动态计算长度值</a></p><h3 id="的规则嵌套和冒泡"><a href="#的规则嵌套和冒泡" class="headerlink" title="@的规则嵌套和冒泡"></a>@的规则嵌套和冒泡</h3><pre><code class="hljs less"><span class="hljs-selector-class">.component</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">768px</span>) &#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">600px</span>;    <span class="hljs-keyword">@media</span>  (<span class="hljs-attribute">min-resolution</span>: <span class="hljs-number">192dpi</span>) &#123;      <span class="hljs-attribute">background-image</span>: url(<span class="hljs-string">/img/retina2x.png</span>);    &#125;  &#125;  <span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">1280px</span>) &#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">800px</span>;  &#125;&#125;</code></pre><p>编译成css的结果</p><pre><code class="hljs css"><span class="hljs-selector-class">.component</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;&#125;<span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-width:</span> <span class="hljs-number">768px</span>) &#123;  <span class="hljs-selector-class">.component</span> &#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">600px</span>;  &#125;&#125;<span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-width:</span> <span class="hljs-number">768px</span>) <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-resolution:</span> <span class="hljs-number">192dpi</span>) &#123;  <span class="hljs-selector-class">.component</span> &#123;    <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(/img/retina2x.png);  &#125;&#125;<span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-width:</span> <span class="hljs-number">1280px</span>) &#123;  <span class="hljs-selector-class">.component</span> &#123;    <span class="hljs-attribute">width</span>: <span class="hljs-number">800px</span>;  &#125;&#125;</code></pre><p>@ 规则（例如 <code>@media</code> 或 <code>@supports</code>）可以与选择器以相同的方式进行嵌套。@ 规则会被放在前面，同一规则集中的其它元素的相对顺序保持不变。这叫做冒泡（bubbling）。</p><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><pre><code class="hljs less"><span class="hljs-variable">@min768:</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">768px</span>);<span class="hljs-selector-class">.element</span> &#123;  <span class="hljs-keyword">@media</span> <span class="hljs-variable">@min768</span> &#123;    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.2rem</span>;  &#125;&#125;<span class="hljs-comment">/*</span><span class="hljs-comment">@media (min-width: 768px) &#123;</span><span class="hljs-comment">  .element &#123;</span><span class="hljs-comment">    font-size: 1.2rem;</span><span class="hljs-comment">  &#125;</span><span class="hljs-comment">&#125;</span><span class="hljs-comment">*/</span></code></pre><p>转义（Escaping）允许你使用任意字符串作为属性或变量值。任何 <code>~&quot;anything&quot;</code> 或 <code>~&#39;anything&#39;</code> 形式的内容都将按原样输出，除非 <a href="https://less.bootcss.com/features/#variables-feature-variable-interpolation">interpolation</a>。</p><h3 id="可变插值-Variable-Interpolation"><a href="#可变插值-Variable-Interpolation" class="headerlink" title="可变插值(Variable Interpolation)"></a>可变插值(Variable Interpolation)</h3><pre><code class="hljs less"><span class="hljs-variable">@images:</span> <span class="hljs-string">&quot;../img&quot;</span>;<span class="hljs-selector-tag">body</span> &#123;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#444</span>;  <span class="hljs-attribute">background</span>: url(<span class="hljs-string">&quot;@&#123;images&#125;/bg.png&quot;</span>);&#125;</code></pre><h3 id="image-size，image-width，image-height"><a href="#image-size，image-width，image-height" class="headerlink" title="image-size，image-width，image-height"></a>image-size，image-width，image-height</h3><p>从文件获取的图像尺寸。</p><pre><code class="hljs less"><span class="hljs-selector-tag">image-size</span>(<span class="hljs-string">&quot;file.png&quot;</span>);<span class="hljs-comment">//输出：10px 10px</span><span class="hljs-selector-tag">image-width</span>(<span class="hljs-string">&quot;file.png&quot;</span>);<span class="hljs-comment">//10px</span><span class="hljs-selector-tag">image-height</span>(<span class="hljs-string">&quot;file.png&quot;</span>);<span class="hljs-comment">//10px</span></code></pre><h3 id="命名空间访问符"><a href="#命名空间访问符" class="headerlink" title="命名空间访问符"></a>命名空间访问符</h3><p>有点像对象，封装的感觉</p><pre><code class="hljs less"><span class="hljs-selector-id">#bundle</span>() &#123;  <span class="hljs-selector-class">.button</span> &#123;    <span class="hljs-attribute">display</span>: block;    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid black;    <span class="hljs-attribute">background-color</span>: grey;    <span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-pseudo">:hover</span> &#123;      <span class="hljs-attribute">background-color</span>: white;    &#125;  &#125;  <span class="hljs-selector-class">.tab</span> &#123; ... &#125;  <span class="hljs-selector-class">.citation</span> &#123; ... &#125;&#125;</code></pre><p>现在，如果我们希望把 <code>.button</code> 类混合到 <code>#header a</code> 中，我们可以这样做：</p><pre><code class="hljs less"><span class="hljs-selector-id">#header</span> <span class="hljs-selector-tag">a</span> &#123;  <span class="hljs-attribute">color</span>: orange;  <span class="hljs-selector-id">#bundle</span><span class="hljs-selector-class">.button</span>();  <span class="hljs-comment">// 还可以书写为 #bundle &gt; .button 形式</span>&#125;</code></pre><p>注意：如果不希望它们出现在输出的 CSS 中，例如 <code>#bundle .tab</code>，请将 <code>()</code> 附加到命名空间（例如 <code>#bundle()</code>）后面。</p><h3 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h3><p>像对象取值一样</p><pre><code class="hljs less"><span class="hljs-selector-id">#colors</span>() &#123;  <span class="hljs-attribute">primary</span>: blue;  <span class="hljs-attribute">secondary</span>: green;&#125;<span class="hljs-selector-class">.button</span> &#123;  <span class="hljs-attribute">color</span>: #colors[primary];  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid #colors[secondary];&#125;</code></pre><p>输出符合预期：</p><pre><code class="hljs css"><span class="hljs-selector-class">.button</span> &#123;  <span class="hljs-attribute">color</span>: blue;  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid green;&#125;</code></pre><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><pre><code class="hljs less"><span class="hljs-variable">@var:</span> red;<span class="hljs-selector-id">#page</span> &#123;  <span class="hljs-variable">@var:</span> white;  <span class="hljs-selector-id">#header</span> &#123;    <span class="hljs-attribute">color</span>: <span class="hljs-variable">@var</span>; <span class="hljs-comment">// white</span>  &#125;&#125;</code></pre><p>与 CSS 自定义属性一样，混合（mixin）和变量的定义不必在引用之前事先定义。因此，下面的 Less 代码示例和上面的代码示例是相同的：</p><pre><code class="hljs less"><span class="hljs-variable">@var:</span> red;<span class="hljs-selector-id">#page</span> &#123;  <span class="hljs-selector-id">#header</span> &#123;    <span class="hljs-attribute">color</span>: <span class="hljs-variable">@var</span>; <span class="hljs-comment">// white</span>  &#125;  <span class="hljs-variable">@var:</span> white;&#125;</code></pre><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><pre><code class="hljs less"><span class="hljs-comment">/* 一个块注释</span><span class="hljs-comment"> * style comment! */</span><span class="hljs-variable">@var:</span> red;<span class="hljs-comment">// 这一行被注释掉了！</span><span class="hljs-variable">@var:</span> white;</code></pre><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>“导入”的工作方式和你预期的一样。你可以导入一个 <code>.less</code> 文件，此文件中的所有变量就可以全部使用了。如果导入的文件是 <code>.less</code> 扩展名，则可以将扩展名省略掉：</p><pre><code class="hljs css">@import &quot;library&quot;; // library.less<span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;typo.css&quot;</span>;</code></pre>]]></content>
    
    
    <categories>
      
      <category>Less</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css less</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>npm常用命令</title>
    <link href="/2020/08/15/npm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2020/08/15/npm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>快速查阅npm常用命令</p><a id="more"></a><ul><li><p>npm install <name>安装nodejs的依赖包</p></li><li><p>npm install <name> -g 将包安装到全局环境中</p></li><li><p>npm install <name> –save 安装的同时，将信息写入package.json中</p></li><li><p>npm init 会引导你创建一个package.json文件，包括名称、版本、作者这些信息等</p></li><li><p>npm remove <name>移除</p></li><li><p>npm update <name>更新</p></li><li><p>npm ls 列出当前安装的了所有包</p></li><li><p>npm root 查看当前包的安装路径</p></li><li><p>npm root -g 查看全局的包的安装路径</p></li><li><p>npm help 帮助，如果要单独查看install命令的帮助，可以使用的npm help install</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>npm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>npm 命令</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>emmet快捷语法</title>
    <link href="/2020/08/15/emmet%E5%BF%AB%E6%8D%B7%E8%AF%AD%E6%B3%95/"/>
    <url>/2020/08/15/emmet%E5%BF%AB%E6%8D%B7%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="一、HTML代码"><a href="#一、HTML代码" class="headerlink" title="一、HTML代码"></a><strong>一、HTML代码</strong></h2><p><strong>（一）HTML5文档基本结构（！）</strong></p><div algin="left">     <img src="assets/1748092-20191012190209861-1504500049.png" /></div>- html:5 或!：用于HTML5文档类型- html:xt：用于XHTML过渡文档类型- html:4s：用于HTML4严格文档类型<p><strong>（二）页面中添加添加类、id、文本和属性</strong></p><p><strong>1、添加id（#）</strong></p><p>输入 p#box （给p元素添加一个名为box的id）</p><pre><code class="hljs 1c">p<span class="hljs-meta">#box</span></code></pre><div algin="left">     <img src="assets/1748092-20191012191017369-480170716.png" /></div><p><strong>2、添加类class（.）</strong></p><p>输入 .box（給div元素添加一个名为box的class）</p><pre><code class="hljs asciidoc"><span class="hljs-title">.box    </span></code></pre><div algin="left">     <img src="assets/1748092-20191012191358183-101071079.png" /></div><p> 输入 p.box （给p元素添加一个名为box的class）</p><pre><code class="hljs css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.box</span></code></pre><div algin="left">     <img src="assets/1748092-20191012191706264-1209074938.png" /></div><p><strong>3、添加文本（{ }）和属性（[ ]）</strong></p><p> 输入 h1{neirong} 和 Tab键 （为h1元素添加内容 neirong）</p><pre><code class="hljs dust"><span class="xml">h1</span><span class="hljs-template-variable">&#123;nierong&#125;</span></code></pre><div algin="left">     <img src="assets/1748092-20191012192607946-117025371.png" /></div><p> 输入 a[href=#] 和Tab键（为a元素加上href属性，并且为href加上属性值#）</p><pre><code class="hljs livecodeserver"><span class="hljs-keyword">a</span>[href=<span class="hljs-comment">#]</span></code></pre><div algin="left">     <img src="assets/1748092-20191012192803656-722963111.png" /></div><p><strong>（三）元素嵌套（子节点（&gt;），兄弟节点（+），上级节点（^））</strong></p><p>**&gt;**：子元素符号，表示嵌套的元素</p><p>**+**：同级标签符号</p><p><strong>^</strong>：可以使该符号前的标签提升一行</p><p><strong>嵌套子元素（&gt;）</strong></p><pre><code class="hljs applescript"><span class="hljs-keyword">div</span>&gt;span</code></pre><div algin="left">     <img src="assets/1748092-20191012193127062-1474488030.png" /></div><p> <strong>生成同级元素（+）</strong></p><pre><code class="hljs applescript"><span class="hljs-keyword">div</span>+span</code></pre><div algin="left">     <img src="assets/1584503144782.png" /></div><p> <strong>使符号前的标签提升一行，上级节点（^）</strong></p><p>div&gt;ul&gt;li^span (这里的<code>^</code>是接在<code>li</code>后面所以span在<code>li</code>的上一级，与<code>ul</code>成了兄弟关系,当然两个  ^^  就是上上级）</p><pre><code class="hljs applescript"><span class="hljs-keyword">div</span>&gt;ul&gt;li^<span class="hljs-keyword">div</span></code></pre><div algin="left">     <img src="assets/1748092-20191012194030075-1466017426.png" /></div><p><strong>（四）重复指令（*）</strong></p><p>*****号后面添加数字表示重复的元素个数</p><pre><code class="hljs angelscript">ul&gt;li*<span class="hljs-number">3</span></code></pre><div algin="left">     <img src="assets/1748092-20191012194521723-1438771130.png" /></div><p><strong>（五）分组（( )）</strong></p><p>可以通过嵌套和括号来快速生成一些代码块，括号里面的内容为一个代码块，表示与括号内部嵌套和外面的的层级无关。</p><pre><code class="hljs livecodeserver"><span class="hljs-keyword">div</span>&gt;(ul&gt;li&gt;<span class="hljs-keyword">a</span>)+<span class="hljs-keyword">div</span>&gt;p</code></pre><div algin="left">     <img src="assets/1748092-20191012195105347-350246085.png" /></div><p><strong>（六）隐式标签</strong></p><p>这个标签没有指令，而是部分标签可以不使用输入标签，直接输入指令，即可识别父元素</p><p>隐式标签有以下几个：</p><p><strong>li</strong>：用于 ul 和 ol 中</p><p><strong>tr</strong>：用于 table、tbody、thead 和 tfoot 中</p><p><strong>td</strong>：用于 tr 中</p><p>例1：</p><pre><code class="hljs asciidoc"><span class="hljs-title">.box</span></code></pre><div algin="left">     <img src="assets/1748092-20191012201438063-411844726.png" /></div><p> <strong>例2：</strong></p><pre><code class="hljs angelscript">ul&gt;.box$*<span class="hljs-number">3</span></code></pre><div algin="left">     <img src="assets/1748092-20191012201625901-166598517.png" /></div><p><strong>（七）递增（$）</strong></p><p>$代表一位数，后面更上*数字就代表从1递增到填写的数字；</p><p>1、使用 <code>*</code> 运算符可以重复生成元素，如果带 <code>$</code> 就可以为它们编号。把 <code>$</code> 放在元素名、属性名或者属性值中，将为每个元素生成正确的编号</p><pre><code class="hljs gauss"><span class="hljs-built_in">select</span>&gt;.<span class="hljs-built_in">box</span>$*<span class="hljs-number">3</span></code></pre><div algin="left">     <img src="assets/1748092-20191012202316610-1999882115.png" /></div><p><strong>2、使用多 $ 可以填充前导的零</strong></p><pre><code class="hljs powershell"><span class="hljs-built_in">select</span>&gt;.box<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>*<span class="hljs-number">5</span></code></pre><div algin="left">     <img src="assets/1748092-20191012211225746-192819459.png" /></div><p> <strong>3、改变编号的基数和方向</strong></p><p>使用@，可以改变数字的走向（升序或降序）和基数（例如启始值）。在$ 后添加 @- 来改变数字的排序。</p><p>（从3开始，倒序排列）</p><pre><code class="hljs gauss"><span class="hljs-built_in">select</span>&gt;.<span class="hljs-built_in">box</span>$<span class="hljs-comment">@-*3</span></code></pre><div algin="left">     <img src="assets/1748092-20191012211822579-1645055345.png" /></div><p> <strong>4、在 $ 后面添加 @N(@数字) 改变编号的基数：</strong></p><p>（从3开始，共5个数）</p><pre><code class="hljs angelscript">select&gt;.box$@<span class="hljs-number">3</span>*<span class="hljs-number">5</span></code></pre><div algin="left">     <img src="assets/1748092-20191012212203337-1971934090.png" /></div>]]></content>
    
    
    <categories>
      
      <category>emmet</category>
      
    </categories>
    
    
    <tags>
      
      <tag>emmet</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vscode快捷键</title>
    <link href="/2020/08/15/vscode%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <url>/2020/08/15/vscode%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="常用-General"><a href="#常用-General" class="headerlink" title="常用 General"></a>常用 General</h2><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl + Shift + P，F1</td><td>显示命令面板 Show Command Palette</td></tr><tr><td>Ctrl + P</td><td>快速打开 Quick Open</td></tr><tr><td>Ctrl + Shift + N</td><td>新窗口/实例 New window/instance</td></tr><tr><td>Ctrl + Shift + W</td><td>关闭窗口/实例 Close window/instance</td></tr><tr><td>Ctrl + ,</td><td>用户设置 User Settings</td></tr><tr><td>Ctrl + K Ctrl + S</td><td>设置键盘快捷方式 Keyboard Shortcuts</td></tr></tbody></table><h2 id="基础编辑-Basic-editing"><a href="#基础编辑-Basic-editing" class="headerlink" title="基础编辑 Basic editing"></a>基础编辑 Basic editing</h2><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl + X</td><td>剪切行（空选定） Cut line (empty selection)</td></tr><tr><td>Ctrl + C</td><td>复制行（空选定）Copy line (empty selection)</td></tr><tr><td>Alt + ↑ / ↓</td><td>向上/向下移动行 Move line up/down</td></tr><tr><td>Shift + Alt + ↓ / ↑</td><td>向上/向下复制行 Copy line up/down</td></tr><tr><td>Ctrl + Shift + K</td><td>删除行 Delete line</td></tr><tr><td>Ctrl + Enter</td><td>在下面插入行 Insert line below</td></tr><tr><td>Ctrl + Shift + Enter</td><td>在上面插入行 Insert line above</td></tr><tr><td>Ctrl + Shift + \</td><td>跳到匹配的括号 Jump to matching bracket</td></tr><tr><td>Ctrl + ] / [</td><td>缩进/缩进行 Indent/outdent line</td></tr><tr><td>Home</td><td>转到行首 Go to beginning of line</td></tr><tr><td>End</td><td>转到行尾 Go to end of line</td></tr><tr><td>Ctrl + Home</td><td>转到文件开头 Go to beginning of file</td></tr><tr><td>Ctrl + End</td><td>转到文件末尾 Go to end of file</td></tr><tr><td>Ctrl + ↑ / ↓</td><td>向上/向下滚动行 Scroll line up/down</td></tr><tr><td>Alt + PgUp / PgDown</td><td>向上/向下滚动页面 Scroll page up/down</td></tr><tr><td>Ctrl + Shift + [</td><td>折叠（折叠）区域 Fold (collapse) region</td></tr><tr><td>Ctrl + Shift + ]</td><td>展开（未折叠）区域 Unfold (uncollapse) region</td></tr><tr><td>Ctrl + K Ctrl + [</td><td>折叠（未折叠）所有子区域 Fold (collapse) all subregions</td></tr><tr><td>Ctrl + K Ctrl + ]</td><td>展开（未折叠）所有子区域 Unfold (uncollapse) all subregions</td></tr><tr><td>Ctrl + K Ctrl + 0</td><td>折叠（折叠）所有区域 Fold (collapse) all regions</td></tr><tr><td>Ctrl + K Ctrl + J</td><td>展开（未折叠）所有区域 Unfold (uncollapse) all regions</td></tr><tr><td>Ctrl + K Ctrl + C</td><td>添加行注释 Add line comment</td></tr><tr><td>Ctrl + K Ctrl + U</td><td>删除行注释 Remove line comment</td></tr><tr><td>Ctrl + /</td><td>切换行注释 Toggle line comment</td></tr><tr><td>Shift + Alt + A</td><td>切换块注释 Toggle block comment</td></tr><tr><td>Alt + Z</td><td>切换换行 Toggle word wrap</td></tr></tbody></table><h2 id="导航-Navigation"><a href="#导航-Navigation" class="headerlink" title="导航 Navigation"></a>导航 Navigation</h2><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl + T</td><td>显示所有符号 Show all Symbols</td></tr><tr><td>Ctrl + G</td><td>转到行… Go to Line…</td></tr><tr><td>Ctrl + P</td><td>转到文件… Go to File…</td></tr><tr><td>Ctrl + Shift + O</td><td>转到符号… Go to Symbol…</td></tr><tr><td>Ctrl + Shift + M</td><td>显示问题面板 Show Problems panel</td></tr><tr><td>F8</td><td>转到下一个错误或警告 Go to next error or warning</td></tr><tr><td>Shift + F8</td><td>转到上一个错误或警告 Go to previous error or warning</td></tr><tr><td>Ctrl + Shift + Tab</td><td>导航编辑器组历史记录 Navigate editor group history</td></tr><tr><td>Alt + ← / →</td><td>返回/前进 Go back / forward</td></tr><tr><td>Ctrl + M</td><td>切换选项卡移动焦点 Toggle Tab moves focus</td></tr></tbody></table><h2 id="搜索和替换-Search-and-replace"><a href="#搜索和替换-Search-and-replace" class="headerlink" title="搜索和替换 Search and replace"></a>搜索和替换 Search and replace</h2><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl + F</td><td>查找 Find</td></tr><tr><td>Ctrl + H</td><td>替换 Replace</td></tr><tr><td>F3 / Shift + F3</td><td>查找下一个/上一个 Find next/previous</td></tr><tr><td>Alt + Enter</td><td>选择查找匹配的所有出现 Select all occurences of Find match</td></tr><tr><td>Ctrl + D</td><td>将选择添加到下一个查找匹配 Add selection to next Find match</td></tr><tr><td>Ctrl + K Ctrl + D</td><td>将最后一个选择移至下一个查找匹配项 Move last selection to next Find match</td></tr><tr><td>Alt + C / R / W</td><td>切换区分大小写/正则表达式/整个词 Toggle case-sensitive / regex / whole word</td></tr></tbody></table><h2 id="多光标和选择-Multi-cursor-and-selection"><a href="#多光标和选择-Multi-cursor-and-selection" class="headerlink" title="多光标和选择 Multi-cursor and selection"></a>多光标和选择 Multi-cursor and selection</h2><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Alt +单击</td><td>插入光标 Insert cursor</td></tr><tr><td>Ctrl + Alt +↑/↓</td><td>在上/下插入光标 Insert cursor above / below</td></tr><tr><td>Ctrl + U</td><td>撤消上一个光标操作 Undo last cursor operation</td></tr><tr><td>Shift + Alt + I</td><td>在选定的每一行的末尾插入光标 Insert cursor at end of each line selected</td></tr><tr><td>Ctrl + L</td><td>选择当前行 Select current line</td></tr><tr><td>Ctrl + Shift + L</td><td>选择当前选择的所有出现 Select all occurrences of current selection</td></tr><tr><td>Ctrl + F2</td><td>选择当前字的所有出现 Select all occurrences of current word</td></tr><tr><td>Shift + Alt + →</td><td>展开选择 Expand selection</td></tr><tr><td>Shift + Alt + ←</td><td>缩小选择 Shrink selection</td></tr><tr><td>Shift + Alt + （拖动鼠标）</td><td>列（框）选择 Column (box) selection</td></tr><tr><td>Ctrl + Shift + Alt +（箭头键）</td><td>列（框）选择 Column (box) selection</td></tr><tr><td>Ctrl + Shift + Alt + PgUp / PgDown</td><td>列（框）选择页上/下 Column (box) selection page up/down</td></tr></tbody></table><h2 id="丰富的语言编辑-Rich-languages-editing"><a href="#丰富的语言编辑-Rich-languages-editing" class="headerlink" title="丰富的语言编辑 Rich languages editing"></a>丰富的语言编辑 Rich languages editing</h2><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl + 空格</td><td>触发建议 Trigger suggestion</td></tr><tr><td>Ctrl + Shift + Space</td><td>触发器参数提示 Trigger parameter hints</td></tr><tr><td>Shift + Alt + F</td><td>格式化文档 Format document</td></tr><tr><td>Ctrl + K Ctrl + F</td><td>格式选定区域 Format selection</td></tr><tr><td>F12</td><td>转到定义 Go to Definition</td></tr><tr><td>Alt + F12</td><td>Peek定义 Peek Definition</td></tr><tr><td>Ctrl + K F12</td><td>打开定义到边 Open Definition to the side</td></tr><tr><td>Ctrl + .</td><td>快速解决 Quick Fix</td></tr><tr><td>Shift + F12</td><td>显示引用 Show References</td></tr><tr><td>F2</td><td>重命名符号 Rename Symbol</td></tr><tr><td>Ctrl + K Ctrl + X</td><td>修剪尾随空格 Trim trailing whitespace</td></tr><tr><td>Ctrl + K M</td><td>更改文件语言 Change file language</td></tr></tbody></table><h2 id="编辑器管理-Editor-management"><a href="#编辑器管理-Editor-management" class="headerlink" title="编辑器管理 Editor management"></a>编辑器管理 Editor management</h2><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl + F4, Ctrl + W</td><td>关闭编辑器 Close editor</td></tr><tr><td>Ctrl + K F</td><td>关闭文件夹 Close folder</td></tr><tr><td>Ctrl + \</td><td>拆分编辑器 Split editor</td></tr><tr><td>Ctrl + 1 / 2 / 3</td><td>聚焦到第 1，第 2 或第 3 编辑器组 Focus into 1st, 2nd or 3rd editor group</td></tr><tr><td>Ctrl + K Ctrl + ← / →</td><td>聚焦到上一个/下一个编辑器组 Focus into previous/next editor group</td></tr><tr><td>Ctrl + Shift + PgUp / PgDown</td><td>向左/向右移动编辑器 Move editor left/right</td></tr><tr><td>Ctrl + K ← / →</td><td>移动活动编辑器组 Move active editor group</td></tr></tbody></table><h2 id="文件管理-File-management"><a href="#文件管理-File-management" class="headerlink" title="文件管理 File management"></a>文件管理 File management</h2><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl + N</td><td>新文件 New File</td></tr><tr><td>Ctrl + O</td><td>打开文件… Open File…</td></tr><tr><td>Ctrl + S</td><td>保存 Save</td></tr><tr><td>Ctrl + Shift + S</td><td>另存为… Save As…</td></tr><tr><td>Ctrl + K S</td><td>全部保存 Save All</td></tr><tr><td>Ctrl + F4</td><td>关闭 Close</td></tr><tr><td>Ctrl + K Ctrl + W</td><td>关闭所有 Close All</td></tr><tr><td>Ctrl + Shift + T</td><td>重新打开关闭的编辑器 Reopen closed editor</td></tr><tr><td>Ctrl + K Enter</td><td>输入保持打开 Enter Keep Open</td></tr><tr><td>Ctrl + Tab</td><td>打开下一个 Open next</td></tr><tr><td>Ctrl + Shift + Tab</td><td>打开上一个 Open previous</td></tr><tr><td>Ctrl + K P</td><td>复制活动文件的路径 Copy path of active file</td></tr><tr><td>Ctrl + K R</td><td>显示资源管理器中的活动文件 Reveal active file in Explorer</td></tr><tr><td>Ctrl + K O</td><td>显示新窗口/实例中的活动文件 Show active file in new window/instance</td></tr></tbody></table><h2 id="显示-Display"><a href="#显示-Display" class="headerlink" title="显示 Display"></a>显示 Display</h2><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>F11</td><td>切换全屏 Toggle full screen</td></tr><tr><td>Shift + Alt + 0</td><td>切换编辑器布局 Toggle editor layout</td></tr><tr><td>Ctrl + = / -</td><td>放大/缩小 Zoom in/out</td></tr><tr><td>Ctrl + B</td><td>切换侧栏可见性 Toggle Sidebar visibility</td></tr><tr><td>Ctrl + Shift + E</td><td>显示浏览器/切换焦点 Show Explorer / Toggle focus</td></tr><tr><td>Ctrl + Shift + F</td><td>显示搜索 Show Search</td></tr><tr><td>Ctrl + Shift + G</td><td>显示 Git Show Git</td></tr><tr><td>Ctrl + Shift + D</td><td>显示调试 Show Debug</td></tr><tr><td>Ctrl + Shift + X</td><td>显示扩展 Show Extensions</td></tr><tr><td>Ctrl + Shift + H</td><td>替换文件 Replace in files</td></tr><tr><td>Ctrl + Shift + J</td><td>切换搜索详细信息 Toggle Search details</td></tr><tr><td>Ctrl + Shift + C</td><td>打开新命令提示符/终端 Open new command prompt/terminal</td></tr><tr><td>Ctrl + Shift +U</td><td>显示输出面板 Show Output panel</td></tr><tr><td>Ctrl + Shift + V</td><td>切换 Markdown 预览 Toggle Markdown preview</td></tr><tr><td>Ctrl + K V</td><td>从旁边打开 Markdown 预览 Open Markdown preview to the side</td></tr><tr><td>Ctrl + K Z</td><td>打开禅模式（ Esc 键退出） Zen Mode (Esc Esc to ecit)</td></tr></tbody></table><h2 id="调试-Debug"><a href="#调试-Debug" class="headerlink" title="调试 Debug"></a>调试 Debug</h2><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>F9</td><td>切换断点 Toggle breakpoint</td></tr><tr><td>F5</td><td>开始/继续 Start/Continue</td></tr><tr><td>Shift + F5</td><td>停止 Stop</td></tr><tr><td>F11 / Shift + F11</td><td>下一步/上一步 Step into/out</td></tr><tr><td>F10</td><td>跳过 Step over</td></tr><tr><td>Ctrl + K Ctrl + I</td><td>显示悬停 Show hover</td></tr></tbody></table><h2 id="集成终端-Integrated-terminal"><a href="#集成终端-Integrated-terminal" class="headerlink" title="集成终端 Integrated terminal"></a>集成终端 Integrated terminal</h2><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl + `</td><td>显示集成终端 Show integrated terminal</td></tr><tr><td>Ctrl + Shift + `</td><td>创建新终端 Create new terminal</td></tr><tr><td>Ctrl + C</td><td>复制选定 Copy selection</td></tr><tr><td>Ctrl + V</td><td>粘贴到活动端子 Paste into active terminal</td></tr><tr><td>Ctrl + ↑ / ↓</td><td>向上/向下滚动 Scroll up/down</td></tr><tr><td>Shift + PgUp / PgDown</td><td>向上/向下滚动页面 Scroll page up/down</td></tr><tr><td>Ctrl + Home / End</td><td>滚动到顶部/底部 Scroll to top/bottom</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>vscode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vscode</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
